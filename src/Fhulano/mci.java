package Fhulano;

// Minimos Cuadrados Indirectos
public class mci {
    public static void main(String[] args) {
        double[][] pi;
        double[][] y = { { 359.27, 102.96, 578.49, }, { 415.76, 114.38, 650.86, }, { 435.11, 118.23, 684.87, },
                { 440.17, 120.45, 680.47, }, { 410.66, 116.25, 642.19, }, { 530.33, 140.27, 787.41, },
                { 557.15, 143.84, 818.06, }, { 472.80, 128.20, 712.16, }, { 471.76, 126.65, 722.23, },
                { 538.30, 141.05, 811.44, }, { 547.76, 143.71, 816.36, }, { 539.00, 142.37, 807.78, },
                { 677.6, 173.13, 983.53, }, { 943.85, 223.21, 1292.99, }, { 893.42, 198.64, 1179.64, },
                { 871.00, 191.89, 1134.78, }, { 793.93, 181.27, 1053.16, }, { 850.36, 180.56, 1085.91, },
                { 967.42, 208.24, 1246.99, }, { 1102.61, 235.43, 1401.94, },

        };
        double[][] x = { { 10.0, 3.06, 1.34, 8.48, 28.0 }, { 15.0, 3.19, 1.44, 9.16, 35.0 },
                { 20.0, 3.3, 1.54, 9.9, 37.0 }, { 25.0, 3.4, 1.71, 11.02, 36.0 }, { 34.0, 3.48, 1.89, 11.64, 29.0 },
                { 27.0, 3.6, 1.99, 12.73, 47.0 }, { 28.0, 3.68, 2.22, 13.88, 50.0 }, { 40.0, 3.72, 2.43, 14.5, 35.0 },
                { 37.0, 3.92, 2.43, 15.47, 33.0 }, { 36.0, 4.15, 2.31, 16.61, 40.0 }, { 32.0, 4.35, 2.39, 17.4, 38.0 },
                { 30.0, 4.37, 2.63, 18.83, 37.0 }, { 36.0, 4.59, 2.69, 20.62, 56.0 }, { 41.0, 5.23, 3.35, 23.76, 88.0 },
                { 45.0, 6.04, 2.81, 26.52, 62.0 }, { 48.0, 6.36, 3.38, 27.45, 51.0 }, { 49.0, 7.04, 3.14, 30.28, 29.0 },
                { 53.0, 7.81, 3.14, 25.4, 22.0 }, { 57.0, 8.09, 6.19, 28.84, 38.0 },
                { 66.0, 9.24, 6.69, 34.36, 41.0 } };
        double[][] xt = Operaciones.transpuesta(x);
        pi = Operaciones.invert(Operaciones.multiplicacionNxM(xt, x));
        pi = Operaciones.multiplicacionNxM(pi, Operaciones.multiplicacionNxM(xt, y));

        for (int i = 0; i < pi.length; i++) {
            for (int j = 0; j < pi[0].length; j++) {
                System.out.print(pi[i][j] + "\t");
            }
            System.out.println();
        }
    }
}